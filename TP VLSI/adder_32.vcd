$date
  Wed Oct 13 12:17:30 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! a[31:0] $end
$var reg 32 " b[31:0] $end
$var reg 32 # s[31:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$scope module adder_32 $end
$var reg 32 & a[31:0] $end
$var reg 32 ' b[31:0] $end
$var reg 1 ( cin $end
$var reg 32 ) s[31:0] $end
$var reg 1 * cout $end
$var reg 33 + c[32:0] $end
$scope module fa0 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . cin $end
$var reg 1 / s $end
$var reg 1 0 cout $end
$upscope $end
$scope module fa1 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 cin $end
$var reg 1 4 s $end
$var reg 1 5 cout $end
$upscope $end
$scope module fa2 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 s $end
$var reg 1 : cout $end
$upscope $end
$scope module fa3 $end
$var reg 1 ; a $end
$var reg 1 < b $end
$var reg 1 = cin $end
$var reg 1 > s $end
$var reg 1 ? cout $end
$upscope $end
$scope module fa4 $end
$var reg 1 @ a $end
$var reg 1 A b $end
$var reg 1 B cin $end
$var reg 1 C s $end
$var reg 1 D cout $end
$upscope $end
$scope module fa5 $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G cin $end
$var reg 1 H s $end
$var reg 1 I cout $end
$upscope $end
$scope module fa6 $end
$var reg 1 J a $end
$var reg 1 K b $end
$var reg 1 L cin $end
$var reg 1 M s $end
$var reg 1 N cout $end
$upscope $end
$scope module fa7 $end
$var reg 1 O a $end
$var reg 1 P b $end
$var reg 1 Q cin $end
$var reg 1 R s $end
$var reg 1 S cout $end
$upscope $end
$scope module fa8 $end
$var reg 1 T a $end
$var reg 1 U b $end
$var reg 1 V cin $end
$var reg 1 W s $end
$var reg 1 X cout $end
$upscope $end
$scope module fa9 $end
$var reg 1 Y a $end
$var reg 1 Z b $end
$var reg 1 [ cin $end
$var reg 1 \ s $end
$var reg 1 ] cout $end
$upscope $end
$scope module fa10 $end
$var reg 1 ^ a $end
$var reg 1 _ b $end
$var reg 1 ` cin $end
$var reg 1 a s $end
$var reg 1 b cout $end
$upscope $end
$scope module fa11 $end
$var reg 1 c a $end
$var reg 1 d b $end
$var reg 1 e cin $end
$var reg 1 f s $end
$var reg 1 g cout $end
$upscope $end
$scope module fa12 $end
$var reg 1 h a $end
$var reg 1 i b $end
$var reg 1 j cin $end
$var reg 1 k s $end
$var reg 1 l cout $end
$upscope $end
$scope module fa13 $end
$var reg 1 m a $end
$var reg 1 n b $end
$var reg 1 o cin $end
$var reg 1 p s $end
$var reg 1 q cout $end
$upscope $end
$scope module fa14 $end
$var reg 1 r a $end
$var reg 1 s b $end
$var reg 1 t cin $end
$var reg 1 u s $end
$var reg 1 v cout $end
$upscope $end
$scope module fa15 $end
$var reg 1 w a $end
$var reg 1 x b $end
$var reg 1 y cin $end
$var reg 1 z s $end
$var reg 1 { cout $end
$upscope $end
$scope module fa16 $end
$var reg 1 | a $end
$var reg 1 } b $end
$var reg 1 !" cin $end
$var reg 1 "" s $end
$var reg 1 #" cout $end
$upscope $end
$scope module fa17 $end
$var reg 1 $" a $end
$var reg 1 %" b $end
$var reg 1 &" cin $end
$var reg 1 '" s $end
$var reg 1 (" cout $end
$upscope $end
$scope module fa18 $end
$var reg 1 )" a $end
$var reg 1 *" b $end
$var reg 1 +" cin $end
$var reg 1 ," s $end
$var reg 1 -" cout $end
$upscope $end
$scope module fa19 $end
$var reg 1 ." a $end
$var reg 1 /" b $end
$var reg 1 0" cin $end
$var reg 1 1" s $end
$var reg 1 2" cout $end
$upscope $end
$scope module fa20 $end
$var reg 1 3" a $end
$var reg 1 4" b $end
$var reg 1 5" cin $end
$var reg 1 6" s $end
$var reg 1 7" cout $end
$upscope $end
$scope module fa21 $end
$var reg 1 8" a $end
$var reg 1 9" b $end
$var reg 1 :" cin $end
$var reg 1 ;" s $end
$var reg 1 <" cout $end
$upscope $end
$scope module fa22 $end
$var reg 1 =" a $end
$var reg 1 >" b $end
$var reg 1 ?" cin $end
$var reg 1 @" s $end
$var reg 1 A" cout $end
$upscope $end
$scope module fa23 $end
$var reg 1 B" a $end
$var reg 1 C" b $end
$var reg 1 D" cin $end
$var reg 1 E" s $end
$var reg 1 F" cout $end
$upscope $end
$scope module fa24 $end
$var reg 1 G" a $end
$var reg 1 H" b $end
$var reg 1 I" cin $end
$var reg 1 J" s $end
$var reg 1 K" cout $end
$upscope $end
$scope module fa25 $end
$var reg 1 L" a $end
$var reg 1 M" b $end
$var reg 1 N" cin $end
$var reg 1 O" s $end
$var reg 1 P" cout $end
$upscope $end
$scope module fa26 $end
$var reg 1 Q" a $end
$var reg 1 R" b $end
$var reg 1 S" cin $end
$var reg 1 T" s $end
$var reg 1 U" cout $end
$upscope $end
$scope module fa27 $end
$var reg 1 V" a $end
$var reg 1 W" b $end
$var reg 1 X" cin $end
$var reg 1 Y" s $end
$var reg 1 Z" cout $end
$upscope $end
$scope module fa28 $end
$var reg 1 [" a $end
$var reg 1 \" b $end
$var reg 1 ]" cin $end
$var reg 1 ^" s $end
$var reg 1 _" cout $end
$upscope $end
$scope module fa29 $end
$var reg 1 `" a $end
$var reg 1 a" b $end
$var reg 1 b" cin $end
$var reg 1 c" s $end
$var reg 1 d" cout $end
$upscope $end
$scope module fa30 $end
$var reg 1 e" a $end
$var reg 1 f" b $end
$var reg 1 g" cin $end
$var reg 1 h" s $end
$var reg 1 i" cout $end
$upscope $end
$scope module fa31 $end
$var reg 1 j" a $end
$var reg 1 k" b $end
$var reg 1 l" cin $end
$var reg 1 m" s $end
$var reg 1 n" cout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000000 !
b11111111111111111111111111111111 "
b00000000000000000000000000000000 #
1$
1%
b00000000000000000000000000000000 &
b11111111111111111111111111111111 '
1(
b00000000000000000000000000000000 )
1*
b11111111111111111111111111111111U +
0,
1-
1.
0/
10
01
12
13
04
15
06
17
18
09
1:
0;
1<
1=
0>
1?
0@
1A
1B
0C
1D
0E
1F
1G
0H
1I
0J
1K
1L
0M
1N
0O
1P
1Q
0R
1S
0T
1U
1V
0W
1X
0Y
1Z
1[
0\
1]
0^
1_
1`
0a
1b
0c
1d
1e
0f
1g
0h
1i
1j
0k
1l
0m
1n
1o
0p
1q
0r
1s
1t
0u
1v
0w
1x
1y
0z
1{
0|
1}
1!"
0""
1#"
0$"
1%"
1&"
0'"
1("
0)"
1*"
1+"
0,"
1-"
0."
1/"
10"
01"
12"
03"
14"
15"
06"
17"
08"
19"
1:"
0;"
1<"
0="
1>"
1?"
0@"
1A"
0B"
1C"
1D"
0E"
1F"
0G"
1H"
1I"
0J"
1K"
0L"
1M"
1N"
0O"
1P"
0Q"
1R"
1S"
0T"
1U"
0V"
1W"
1X"
0Y"
1Z"
0["
1\"
1]"
0^"
1_"
0`"
1a"
1b"
0c"
1d"
0e"
1f"
1g"
0h"
1i"
0j"
1k"
1l"
0m"
1n"
#20000000
