$date
  Wed Oct 20 11:44:01 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module shifter_tb $end
$var reg 1 ! shift_lsl $end
$var reg 1 " shift_lsr $end
$var reg 1 # shift_asr $end
$var reg 1 $ shift_ror $end
$var reg 1 % shift_rrx $end
$var reg 5 & shift_val[4:0] $end
$var reg 32 ' din[31:0] $end
$var reg 1 ( cin $end
$var reg 32 ) dout[31:0] $end
$var reg 1 * cout $end
$var reg 1 + vdd $end
$var reg 1 , vss $end
$scope module shifter $end
$var reg 1 - shift_lsl $end
$var reg 1 . shift_lsr $end
$var reg 1 / shift_asr $end
$var reg 1 0 shift_ror $end
$var reg 1 1 shift_rrx $end
$var reg 5 2 shift_val[4:0] $end
$var reg 32 3 din[31:0] $end
$var reg 1 4 cin $end
$var reg 32 5 dout[31:0] $end
$var reg 1 6 cout $end
$var reg 1 7 vdd $end
$var reg 1 8 vss $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
1!
0"
0#
0$
0%
b00011 &
b00000000000000000000000000000111 '
0(
b00000000000000000000000000111000 )
0*
0+
0,
1-
0.
0/
00
01
b00011 2
b00000000000000000000000000000111 3
04
b00000000000000000000000000111000 5
06
07
08
#10000000
0!
1"
b00000000000000000000000000111000 '
b00000000000000000000000000000111 )
0-
1.
b00000000000000000000000000111000 3
b00000000000000000000000000000111 5
#20000000
0"
1#
b11100000000000000000000000000111 )
0.
1/
b11100000000000000000000000000111 5
#30000000
0#
1$
b00000000000000000000000000000111 '
b11100000000000000000000000000000 )
0/
10
b00000000000000000000000000000111 3
b11100000000000000000000000000000 5
#40000000
0$
1%
b11000000000000000000000000001110 '
1(
b11100000000000000000000000000111 )
1*
00
11
b11000000000000000000000000001110 3
14
b11100000000000000000000000000111 5
16
#50000000
