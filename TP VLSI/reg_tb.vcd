$date
  Wed Dec  1 10:23:51 2021
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module reg_tb $end
$var reg 32 ! wdata1[31:0] $end
$var reg 32 " wdata2[31:0] $end
$var reg 32 # wdata3[31:0] $end
$var reg 32 $ reg_rd1[31:0] $end
$var reg 32 % reg_rd2[31:0] $end
$var reg 32 & reg_rd3[31:0] $end
$var reg 32 ' reg_pc[31:0] $end
$var reg 1 ( wen1 $end
$var reg 1 ) wen2 $end
$var reg 1 * wcry $end
$var reg 1 + wzero $end
$var reg 1 , wneg $end
$var reg 1 - wovr $end
$var reg 1 . cspr_wb $end
$var reg 1 / reg_v1 $end
$var reg 1 0 reg_v2 $end
$var reg 1 1 reg_v3 $end
$var reg 1 2 reg_cry $end
$var reg 1 3 reg_zero $end
$var reg 1 4 reg_neg $end
$var reg 1 5 reg_cznv $end
$var reg 1 6 reg_ovr $end
$var reg 1 7 reg_vv $end
$var reg 1 8 inval1 $end
$var reg 1 9 inval2 $end
$var reg 1 : inval_czn $end
$var reg 1 ; inval_ovr $end
$var reg 1 < reg_pcv $end
$var reg 1 = inc_pc $end
$var reg 1 > reset_n $end
$var reg 1 ? ck $end
$var reg 4 @ wadr1[3:0] $end
$var reg 4 A wadr2[3:0] $end
$var reg 4 B radr1[3:0] $end
$var reg 4 C radr2[3:0] $end
$var reg 4 D radr3[3:0] $end
$var reg 4 E inval_adr1[3:0] $end
$var reg 4 F inval_adr2[3:0] $end
$var reg 1 G vdd $end
$var reg 1 H vss $end
$var reg 1 I end_ck $end
$scope module reg $end
$var reg 32 J wdata1[31:0] $end
$var reg 4 K wadr1[3:0] $end
$var reg 1 L wen1 $end
$var reg 32 M wdata2[31:0] $end
$var reg 4 N wadr2[3:0] $end
$var reg 1 O wen2 $end
$var reg 1 P wcry $end
$var reg 1 Q wzero $end
$var reg 1 R wneg $end
$var reg 1 S wovr $end
$var reg 1 T cspr_wb $end
$var reg 32 U reg_rd1[31:0] $end
$var reg 4 V radr1[3:0] $end
$var reg 1 W reg_v1 $end
$var reg 32 X reg_rd2[31:0] $end
$var reg 4 Y radr2[3:0] $end
$var reg 1 Z reg_v2 $end
$var reg 32 [ reg_rd3[31:0] $end
$var reg 4 \ radr3[3:0] $end
$var reg 1 ] reg_v3 $end
$var reg 1 ^ reg_cry $end
$var reg 1 _ reg_zero $end
$var reg 1 ` reg_neg $end
$var reg 1 a reg_cznv $end
$var reg 1 b reg_ovr $end
$var reg 1 c reg_vv $end
$var reg 4 d inval_adr1[3:0] $end
$var reg 1 e inval1 $end
$var reg 4 f inval_adr2[3:0] $end
$var reg 1 g inval2 $end
$var reg 1 h inval_czn $end
$var reg 1 i inval_ovr $end
$var reg 32 j reg_pc[31:0] $end
$var reg 1 k reg_pcv $end
$var reg 1 l inc_pc $end
$var reg 1 m ck $end
$var reg 1 n reset_n $end
$var reg 1 o vdd $end
$var reg 1 p vss $end
$comment registres is not handled $end
$var reg 16 q validite_registre[0:15] $end
$var reg 4 r flags[0:3] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b00000000000000000000000000000111 !
b00000000000000000000000000000011 "
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU #
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU $
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU %
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU &
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU '
1(
1)
U*
U+
U,
U-
U.
U/
U0
U1
U2
U3
U4
U5
U6
U7
U8
U9
U:
U;
U<
U=
U>
1?
b0011 @
b0011 A
bUUUU B
bUUUU C
bUUUU D
bUUUU E
bUUUU F
0G
0H
UI
b00000000000000000000000000000111 J
b0011 K
1L
b00000000000000000000000000000011 M
b0011 N
1O
UP
UQ
UR
US
UT
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU U
bUUUU V
UW
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU X
bUUUU Y
UZ
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU [
bUUUU \
U]
U^
U_
U`
Ua
Ub
Uc
bUUUU d
Ue
bUUUU f
Ug
Uh
Ui
bUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUUU j
Uk
Ul
1m
Un
0o
0p
bUUUUUUUUUUUUUUUU q
bUUUU r
#200000000
0?
0m
#400000000
1?
1m
bUUU1UUUUUUUUUUUU q
#600000000
0?
0m
#800000000
1?
b0010 A
b0011 B
b0010 C
b0010 N
b0011 V
b0010 Y
1m
#1000000000
0?
0m
#1200000000
b00000000000000000000000000000111 $
1/
1?
b00000000000000000000000000000111 U
1W
1m
bUU11UUUUUUUUUUUU q
#1400000000
0?
0m
#1600000000
b00000000000000000000000000000011 %
10
1?
b00000000000000000000000000000011 X
1Z
1m
#1800000000
0?
0m
#2000000000
1?
1m
#2200000000
0?
0m
#2400000000
0?
1I
0m
